version: '3'

vars:
  VERSION: 0.0.80
  DISTDIR: ./dist
  CHARTS: [ 'awg-demoapp' ]
  REPOSITORY: awgappdevlabs.azurecr.io

tasks:

  # logs into the ACR repository
  login-acr:
    cmds:
    - az acr login -n {{ .REPOSITORY }}

  build-app:
    sources:
    - Taskfile.yml
    - ../awg-monorepo/tools/server-mocks/app/**/*
    generates:
    - "{{ .DISTDIR }}/app-{{ .VERSION }}.tar"
    cmds:
    - pushd ../awg-monorepo/tools/server-mocks/app && npm i; popd
    - rm -rf .temp/app/
    - mkdir -p .temp/app/app
    - cp -r ../awg-monorepo/tools/server-mocks/app/* .temp/app/app/
    - tar -c -C .temp/app . -f .temp/app.tar
    - crane append -b node:22-alpine -t {{ .VERSION }} -f .temp/app.tar -o "{{ .DISTDIR }}/app-{{ .VERSION }}.tar"

  publish-app:
    deps:
      - build-app
    cmds:
      - crane push {{ .DISTDIR }}/app-{{ .VERSION }}.tar {{ .REPOSITORY }}/awg-demoapp/app:{{ .VERSION }}

  build-auth:
    sources:
    - Taskfile.yml
    - ../awg-monorepo/tools/server-mocks/auth/**/*
    generates:
    - "{{ .DISTDIR }}/auth-{{ .VERSION }}.tar"
    cmds:
    - pushd ../awg-monorepo/tools/server-mocks/auth && npm i; popd
    - rm -rf .temp/auth/
    - mkdir -p .temp/auth/app
    - cp -r ../awg-monorepo/tools/server-mocks/auth/* .temp/auth/app/
    - tar -c -C .temp/auth . -f .temp/auth.tar
    - crane append -b node:22-alpine -t {{ .VERSION }} -f .temp/auth.tar -o "{{ .DISTDIR }}/auth-{{ .VERSION }}.tar"

  publish-auth:
    deps:
      - build-auth
    cmds:
      - crane push {{ .DISTDIR }}/auth-{{ .VERSION }}.tar {{ .REPOSITORY }}/awg-demoapp/auth:{{ .VERSION }}

  build-landing:
    sources:
    - Taskfile.yml
    - nginx.conf
    - ../awg-monorepo/dist/apps/main-access/**/*
    generates:
    - "{{ .DISTDIR }}/landing-{{ .VERSION }}.tar"
    cmds:
    - rm -rf .temp/landing
    - mkdir -p .temp/landing/usr/share/nginx/html .temp/landing/etc/nginx/conf.d
    - cp -r ../awg-monorepo/dist/apps/main-access/* .temp/landing/usr/share/nginx/html
    - cp -r nginx.conf .temp/landing/etc/nginx/conf.d/default.conf
    - tar -c -C .temp/landing . -f .temp/landing.tar
    - crane append -b nginx:alpine -t {{ .VERSION }} -f .temp/landing.tar -o "{{ .DISTDIR }}/landing-{{ .VERSION }}.tar"

  publish-landing:
    deps:
      - build-landing
    cmds:
      - crane push {{ .DISTDIR }}/landing-{{ .VERSION }}.tar {{ .REPOSITORY }}/awg-demoapp/landing:{{ .VERSION }}

  build-store-master:
    sources:
    - Taskfile.yml
    - nginx.conf
    - ../awg-monorepo/dist/apps/store-master/**/*
    generates:
    - "{{ .DISTDIR }}/store-master-{{ .VERSION }}.tar"
    cmds:
    - rm -rf .temp/store-master
    - mkdir -p .temp/store-master/usr/share/nginx/html .temp/store-master/etc/nginx/conf.d
    - cp -r ../awg-monorepo/dist/apps/store-master/* .temp/store-master/usr/share/nginx/html
    - cp -r nginx.conf .temp/store-master/etc/nginx/conf.d/default.conf
    - tar -c -C .temp/store-master . -f .temp/store-master.tar
    - crane append -b nginx:alpine -t {{ .VERSION }} -f .temp/store-master.tar -o "{{ .DISTDIR }}/store-master-{{ .VERSION }}.tar"

  publish-store-master:
    deps:
      - build-store-master
    cmds:
      - crane push {{ .DISTDIR }}/store-master-{{ .VERSION }}.tar {{ .REPOSITORY }}/awg-demoapp/store-master:{{ .VERSION }}

  build-caller:
    sources:
      - Taskfile.yaml
      - shared/**/*
      - caller/**/*
    generates:
      - caller/target/jib-image.tar
      - "{{ .DISTDIR }}/caller-{{ .VERSION }}.tar"
    cmds:
      - mvn -pl caller clean compile jib:buildTar
      - cp caller/target/jib-image.tar {{ .DISTDIR }}/caller-{{ .VERSION }}.tar

  publish-caller:
    deps:
      - build-caller
    cmds:
      - crane push {{ .DISTDIR }}/caller-{{ .VERSION }}.tar {{ .REPOSITORY }}/awg-demoapp/caller:{{ .VERSION }}

  build-server:
    sources:
      - Taskfile.yaml
      - shared/**/*
      - server/**/*
    generates:
      - server/target/jib-image.tar
      - "{{ .DISTDIR }}/server-{{ .VERSION }}.tar"
    cmds:
      - mvn -pl server clean compile jib:buildTar
      - cp server/target/jib-image.tar {{ .DISTDIR }}/server-{{ .VERSION }}.tar

  publish-server:
    deps:
      - build-server
    cmds:
      - crane push {{ .DISTDIR }}/server-{{ .VERSION }}.tar {{ .REPOSITORY }}/awg-demoapp/server:{{ .VERSION }}

  # reusable task which builds a Helm chart by a name given by the CHART variable
  build-chart:
    requires:
      vars:
        - CHART
        - VERSION
    sources:
      - charts/{{ .CHART }}/**/*
    generates:
      - '{{ .DISTDIR }}/{{ .CHART }}-{{ .VERSION }}.tgz'
    preconditions:
      - test -f 'charts/{{ .CHART }}/Chart.yaml'
    cmds:
      - mkdir -p {{ .DISTDIR }}
      - helm package charts/{{ .CHART }} -d {{ .DISTDIR }} --app-version {{ .VERSION }} --version {{ .VERSION }}

  # builds all the charts
  build-charts:
    deps:
      - task: login-acr
      - for: { var: CHARTS }
        task: build-chart
        vars:
          CHART: '{{ .ITEM }}'
  
  # reusable task which publishes a Helm chart by a name given by the CHART variable
  publish-chart:
    deps:
      - task: build-chart
        vars:
          CHART: '{{ .CHART }}'
    requires:
      vars:
        - CHART
        - VERSION
    cmds:
      - helm push '{{ .DISTDIR }}/{{ .CHART }}-{{ .VERSION }}.tgz' 'oci://{{ .REPOSITORY }}/charts'

  # publishes all the charts
  publish-charts:
    deps:
      - for: { var: CHARTS }
        task: publish-chart
        vars:
          CHART: '{{ .ITEM }}'

  build:
    deps:
      - build-app
      - build-auth
      - build-landing
      - build-store-master
      - build-caller
      - build-server
      - build-charts

  publish:
    deps:
      - publish-app
      - publish-auth
      - publish-landing
      - publish-store-master
      - publish-caller
      - publish-server
      - publish-charts

  default:
    deps:
      - build
  